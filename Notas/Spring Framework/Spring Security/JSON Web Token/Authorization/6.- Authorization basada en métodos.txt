Una vez que hemos colocado @EnableMethodSecurity(prePostEnable=true) en nuestra clase de configuración de seguridad, vamos
a irnos a nuestro métdoque queremos asegurar y vamos a seguir los siguientes pasos:

1.- Vamos a ir llendo a cada uno de los métodos que deseemos asegurar @VerbMapping, vamos a colocar @PreAuthorize(), 
    y dentro de los paréntesis vamos a ir llamando al método que deseemos utilizar para configurar la autorización.

	@PreAuthorize("hasRole('ACMON')")	/	@PreAuthorize("hasAnyRole('ACMON', ''CUSTOMER)")
	//Aquí se nos muestra cómo usar tanto hasRole como hasAnyRole.

	@PreAuthorize("hasAuthority('READ_ALL_PRODUCTS')") / @PreAuthorize("hasAnyAthority('READ_ONE_PRODUCT', 'CREATE')")
	//Aquí se nos muestra como usar tanto hasAuthority como hasAnyAuthority

	@PreAuthorize("permitAll")
	//Aquí vemos cómo permitir el acceso a este endpoint a todo mundo.
	
	@PreAutohorize("denyAll")	
	//Aquí vemos cómo denegar el acceso a este endpoint a todo mundo.

NOTA: Este método sirve para cualquier capa de nuestro backend. Podemos colocar la anotación en un método de lcontrolador,
      del service, de la interface del service, del repository, etc.



	